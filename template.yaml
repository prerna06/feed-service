AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Capsule-Service-Deployment-Descriptor


Parameters:
  Stage:
    Type: String
    Description: Stage name to deploy resources to
    AllowedValues:
      - dev
      - prod

Globals:
  Function:
    Runtime: java11
    MemorySize: 1024
    Timeout: 20
    AutoPublishAlias: !Ref Stage
    Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker
    CodeUri: ./application
    Tags:
      Stage: !Ref Stage
      Service: Capsule
      Resource: Lambda
    Environment:
      Variables:
        TABLE: !Ref CapsuleTable
        APPLICATION_ENVIRONMENT: !Ref Stage
        CLOUD_REGION: us-east-1
        MAIN_CLASS: com.tekcapsule.capsule.application.CapsuleApplication
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1

Resources:

  # Setup API Gateway

  CapsuleApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "capsule-${Stage}"
      StageName: !Ref Stage
      Cors:
        AllowMethods: "'POST, GET'"
        AllowHeaders: "'X-Forwarded-For, Content-Type, Authorization, X-User-Login, X-Channel-Code'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"
        AllowCredentials: false
      Variables:
        LAMBDA_ALIAS: !Ref Stage

  # Setup DynamoDB Table

  CapsuleTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${Stage}Capsule"
      AttributeDefinitions:
        - AttributeName: capsuleId
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: topicCode
          AttributeType: S
      KeySchema:
        - AttributeName: capsuleId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: topicGSI
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: topicCode
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1

  # Setup Lambda Functions

  CreateCapsuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Capsule-CreateCapsule"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CapsuleTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: createFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: capsule/create
            Method: post
            RestApiId:
              Ref: CapsuleApi

  UpdateCapsuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Capsule-UpdateCapsule"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CapsuleTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: updateFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: capsule/update
            Method: post
            RestApiId:
              Ref: CapsuleApi

  DisableCapsuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Capsule-DisableCapsule"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CapsuleTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: disableFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: capsule/disable
            Method: post
            RestApiId:
              Ref: CapsuleApi
  GetCapsuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Capsule-GetCapsule"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CapsuleTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: capsule/get
            Method: post
            RestApiId:
              Ref: CapsuleApi

  BookmarkCapsuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Capsule-BookmarkCapsule"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CapsuleTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: bookmarkFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: capsule/bookmark
            Method: post
            RestApiId:
              Ref: CapsuleApi

  ApproveCapsuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Capsule-ApproveCapsule"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CapsuleTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: approveFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: capsule/approve
            Method: post
            RestApiId:
              Ref: CapsuleApi

  ViewCapsuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Capsule-ViewCapsule"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CapsuleTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: viewFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: capsule/view
            Method: post
            RestApiId:
              Ref: CapsuleApi

  GetMyFeedCapsulesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Capsule-GetMyFeedCapsules"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CapsuleTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getMyFeedFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: capsule/getMyFeed
            Method: post
            RestApiId:
              Ref: CapsuleApi

  GetCapsulesPendingApprovalsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Capsule-GetCapsulesPendingApprovals"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CapsuleTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getPendingApprovalFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: capsule/getPendingApproval
            Method: post
            RestApiId:
              Ref: CapsuleApi

  RecommendCapsuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Capsule-RecommendCapsule"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CapsuleTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: recommendFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: capsule/recommend
            Method: post
            RestApiId:
              Ref: CapsuleApi

  SearchCapsuleByTopicFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Capsule-SearchCapsuleByTopic"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CapsuleTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: searchByTopicFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: capsule/searchByTopic
            Method: post
            RestApiId:
              Ref: CapsuleApi


  GetCapsuleMetadataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Capsule-GetCapsuleMetadata"
      SnapStart:
        ApplyOn: PublishedVersions
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getMetadataFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: capsule/getMetadata
            Method: post
            RestApiId:
              Ref: CapsuleApi

  GetAllCapsulesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${Stage}-Capsule-GetAllCapsules
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: CapsuleTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getAllFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: capsule/getAll
            Method: post
            RestApiId:
              Ref: CapsuleApi

  GetCapsulesCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${Stage}-Capsule-GetCapsulesCount
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: CapsuleTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getCountFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: capsule/getCount
            Method: post
            RestApiId:
              Ref: CapsuleApi

  # Set Output Variable

Outputs:
  ApiEndpoint:
    Description: "Capsule API endpoint."
    Value: !Sub "https://${CapsuleApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/capsule"
